# ------------------ PDF Generation ------------------
def generate_pdf(invoice_data):
    pdf = FPDF()
    pdf.add_page()
    pdf.add_font("Calibri", "", CALIBRI_FONT_PATH, uni=True)
    pdf.add_font("Calibri", "B", CALIBRI_FONT_PATH, uni=True)

    margin = 15
    page_width = pdf.w - 2 * margin

    # Header
    pdf.set_font("Calibri", "B", 22)
    pdf.set_text_color(255, 165, 0)  # Orange
    pdf.cell(page_width, 10, "MB COLLECTION", ln=True, align='C')
    pdf.set_font("Calibri", "B", 14)
    pdf.set_text_color(0, 0, 0)
    pdf.cell(page_width, 8, "Tax Invoice", ln=True, align='C')
    pdf.set_font("Calibri", "", 10)
    pdf.multi_cell(page_width, 5, "H.No 3A Shri Krishana Vatika, Sudamapuri, Vijaynagar, Ghaziabad, Uttar Pradesh - 201001\nPhone: +91-8651537856 | E-mail: skpa.avkashmishra@gmail.com\nGSTIN: 09ENEPM4809Q1Z8", align='C')
    pdf.ln(5)
    pdf.line(margin, pdf.get_y(), pdf.w - margin, pdf.get_y())

    # Bill To
    pdf.ln(5)
    pdf.set_font("Calibri", "B", 12)
    pdf.cell(0, 5, "Bill To:", ln=True)
    pdf.set_font("Calibri", "", 10)
    pdf.cell(0, 5, invoice_data['client_name'], ln=True)
    pdf.cell(0, 5, invoice_data['client_address1'], ln=True)
    pdf.cell(0, 5, invoice_data['client_address2'], ln=True)
    pdf.cell(0, 5, f"GSTIN: {invoice_data['client_gstin']}", ln=True)
    pdf.set_xy(140, 65)
    pdf.set_font("Calibri", "B", 10)
    pdf.cell(0, 5, f"Invoice No: {invoice_data['bill_no']}", ln=True)
    pdf.set_x(140)
    pdf.cell(0, 5, f"Date: {invoice_data['invoice_date']}", ln=True)

    pdf.ln(10)
    pdf.set_fill_color(255, 204, 153)  # Light orange header
    pdf.set_font("Calibri", "B", 10)
    pdf.cell(130, 8, "Particulars", border=1, align='C', fill=True)
    pdf.cell(30, 8, "HSN", border=1, align='C', fill=True)
    pdf.cell(30, 8, "Amount", border=1, align='C', fill=True)
    pdf.ln()

    # Table rows
    pdf.set_font("Calibri", "", 10)
    particulars = invoice_data['particulars'].split('\n')
    hsn_list = ["998222"] * len(particulars)
    amounts = [invoice_data['amount'] / len(particulars)] * len(particulars)  # evenly split if needed

    for i in range(len(particulars)):
        if i % 2 == 0:
            pdf.set_fill_color(255, 255, 204)  # Light yellow
        else:
            pdf.set_fill_color(255, 255, 230)  # Slightly different yellow
        pdf.cell(130, 7, particulars[i], border=1, fill=True)
        pdf.cell(30, 7, hsn_list[i], border=1, align='C', fill=True)
        pdf.cell(30, 7, f"{amounts[i]:.2f}", border=1, align='R', fill=True)
        pdf.ln()

    # Totals
    pdf.set_font("Calibri", "B", 10)
    pdf.set_fill_color(230, 230, 230)
    pdf.cell(160, 7, "Sub Total", border=1, align='R', fill=True)
    pdf.cell(30, 7, f"{invoice_data['sub_total']:.2f}", border=1, align='R', fill=True)
    pdf.ln()
    pdf.cell(160, 7, "IGST @18%", border=1, align='R', fill=True)
    pdf.cell(30, 7, f"{invoice_data['igst']:.2f}", border=1, align='R', fill=True)
    pdf.ln()
    pdf.cell(160, 7, "CGST @9%", border=1, align='R', fill=True)
    pdf.cell(30, 7, f"{invoice_data['cgst']:.2f}", border=1, align='R', fill=True)
    pdf.ln()
    pdf.cell(160, 7, "SGST @9%", border=1, align='R', fill=True)
    pdf.cell(30, 7, f"{invoice_data['sgst']:.2f}", border=1, align='R', fill=True)
    pdf.ln()
    pdf.cell(160, 7, "Grand Total", border=1, align='R', fill=True)
    pdf.cell(30, 7, f"{invoice_data['grand_total']:.2f}", border=1, align='R', fill=True)
    pdf.ln(15)

    # Amount in words & bank details
    pdf.set_font("Calibri", "", 10)
    pdf.multi_cell(0, 5, f"Rupees: {convert_to_words(invoice_data['grand_total'])}\nBank Name: Yes Bank\nAccount Holder Name: MB Collection\nAccount No: 003861900014956\nIFSC Code: YESB0000038")
    pdf.ln(10)
    pdf.set_font("Calibri", "B", 10)
    pdf.cell(0, 5, "For MB COLLECTION", ln=True, align='R')

    if os.path.exists(SIGNATURE_IMAGE):
        pdf.image(SIGNATURE_IMAGE, x=150, y=pdf.get_y(), w=40)
    pdf.ln(20)

    pdf_bytes = pdf.output(dest="S").encode("latin-1")
    return io.BytesIO(pdf_bytes)
